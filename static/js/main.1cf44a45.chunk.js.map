{"version":3,"sources":["component/molecules/AgeSelect.jsx","component/molecules/GenderRadioBtnGroup.jsx","component/atoms/CountBtn.jsx","component/atoms/InputField.jsx","component/molecules/HeightInputField.jsx","component/molecules/WeightInputField.jsx","component/molecules/BadBtn.jsx","component/molecules/GoodBtn.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","margin","spacing","minWidth","AgeSelect","useState","age","setAge","classes","FormControl","component","className","formControl","InputLabel","id","Select","labelId","value","onChange","event","target","variant","items","month","push","MenuItem","makeMonthItems","GenderRadioBtnGroup","setValue","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","label","CountBtn","props","count","counter","countUp","useEffect","el","document","getElementById","addEventListener","removeEventListener","Icon","icon","IconButton","withoutLabel","marginTop","textField","width","InputField","prop","text","values","setValues","clsx","FormHelperText","title_id","title_text","Input","endAdornment","InputAdornment","position","unit_text","aria-describedby","inputProps","maxLength","HeightInputField","WeightInputField","BadBtn","ThumbDownOutlinedIcon","GoodBtn","ThumbUpOutlinedIcon","App","createMuiTheme","palette","type","ThemeProvider","CssBaseline","Grid","container","direction","justify","alignItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1cf44a45.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { createStyles, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\r\n\r\n/** @summary style define*/\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        \"formControl\": {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        }\r\n    }),\r\n);\r\n\r\n/** @summary 月齢選択 コンポーネント */\r\nconst AgeSelect = () => {\r\n\r\n    /** @summary state hook */\r\n    const [age, setAge] = useState('1');\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n\r\n    /** @summary style hook api */\r\n    const classes = useStyles();\r\n\r\n    /** @summary 月齢の選択肢を作成 */\r\n    const makeMonthItems = () => {\r\n        const items = [];\r\n        for (let month = 1; month <= 24; month++) {\r\n            items.push(<MenuItem key={month} value={month}>{month}ヵ月</MenuItem>)\r\n        }\r\n        return items;\r\n    }\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <InputLabel id=\"age_select_label\">月齢</InputLabel>\r\n            <Select\r\n                labelId=\"age_select_label\"\r\n                id=\"age_select\"\r\n                value={age}\r\n                onChange={handleChange}\r\n                variant=\"standard\"\r\n            >\r\n                {makeMonthItems()}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\nexport default AgeSelect;","import React, { useState } from 'react';\r\nimport { makeStyles, createStyles, FormControl, FormControlLabel, FormLabel, RadioGroup, Radio } from '@material-ui/core';\r\n\r\n/** @summary style define*/\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        \"formControl\": {\r\n            margin: theme.spacing(1),\r\n        }\r\n    }),\r\n);\r\n\r\n/** @summary 性別選択のラジオボタン コンポーネント */\r\nconst GenderRadioBtnGroup = () => {\r\n\r\n    /** @summary state hook */\r\n    const [value, setValue] = useState('male');\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    /** @summary style hook api */\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <FormLabel component=\"legend\">性別</FormLabel>\r\n            <RadioGroup aria-label=\"gender\" name=\"gender\" value={value} onChange={handleChange}>\r\n                <FormControlLabel value=\"male\" control={<Radio />} label=\"おとこの子\" />\r\n                <FormControlLabel value=\"female\" control={<Radio />} label=\"おんなの子\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\nexport default GenderRadioBtnGroup;","import React, { useState, useEffect } from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\n/**\r\n * @summary カウントボタン コンポーネント\r\n */\r\nconst CountBtn = (props) => {\r\n\r\n  /**\r\n   * @summary state hook\r\n   * @details 状態管理をする @n\r\n   * メンバー変数を定義して、その値を書き換える関数を定義するみたいなとこ\r\n   */\r\n  const [count, counter] = useState(0);\r\n  const countUp = () => {\r\n    counter(count + 1)\r\n  }\r\n\r\n  /**\r\n   * @summary effect hook\r\n   * @details ライフサイクルを管理する @n\r\n   * コンストラクタ, 更新, デストラクタで行う処理を定義するみたいなとこ\r\n   * @attention デストラクタは毎回走る\r\n   */\r\n  useEffect(() => {\r\n    const el = document.getElementById(props.id);\r\n    el.addEventListener('click', countUp);\r\n    return () => {\r\n      el.removeEventListener('click', countUp)\r\n    }\r\n  });\r\n\r\n  const Icon = props.icon;\r\n  return (\r\n    <IconButton id={props.id} aria-label={props.label}>\r\n      <Icon />\r\n      {count}\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default CountBtn;","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, createStyles, FormControl, FormHelperText, Input, InputAdornment} from '@material-ui/core';\r\n\r\n/** @summary style define*/\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        withoutLabel: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        textField: {\r\n            width: '10em',\r\n        },\r\n    }),\r\n);\r\n\r\n/**\r\n * インプトフィールド コンポーネント\r\n * @param {*} props \r\n * @arg title_id : タイトルid\r\n * @arg title_text : タイトル\r\n * @arg id : inputフィールドid\r\n * @arg unit_text : 単位文字列 \r\n * @arg maxLength : 入力文字数制限\r\n * @arg label : エリアラベル\r\n * \r\n */\r\nconst InputField = (props) => {\r\n\r\n    /** @summary state hook */\r\n    const [values, setValues] = useState({\r\n        text: \"\",\r\n    });\r\n\r\n    /** \r\n     * @summary state change \r\n     * @details 複数のステートを持つ場合のステート変更関数\r\n     */\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    /** @summary style hook api */\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\r\n            <FormHelperText id={props.title_id}>{props.title_text}</FormHelperText>\r\n            <Input\r\n                id={props.id}\r\n                value={values.text}\r\n                \r\n                onChange={handleChange('text')}\r\n                endAdornment={<InputAdornment position=\"end\">{props.unit_text}</InputAdornment>}\r\n                aria-describedby={props.title_id}\r\n                inputProps={{\r\n                    'maxLength' : props.maxLength,\r\n                    'aria-label': props.label,\r\n                }}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\nexport default InputField;\r\n","import React from 'react';\r\nimport { InputField } from '../atoms';\r\n\r\n/** 身長入力フィールド コンポーネント */\r\nconst HeightInputField = () => {\r\n    return (\r\n        <InputField\r\n            title_id=\"height_title\"\r\n            title_text=\"身長\"\r\n            id=\"height_input\"\r\n            unit_text=\"cm\"\r\n            maxLength={6}\r\n            label=\"height\"\r\n        />\r\n    )\r\n}\r\nexport default HeightInputField;\r\n","import React from 'react';\r\nimport { InputField } from '../atoms';\r\n\r\n/** 体重入力フィールド コンポーネント */\r\nconst WeightInputField = () => {\r\n    return (\r\n        <InputField\r\n            title_id=\"weight_title\"\r\n            title_text=\"体重\"\r\n            id=\"weight_input\"\r\n            unit_text=\"kg\"\r\n            maxLength={4}\r\n            label=\"weight\"\r\n        />\r\n    )\r\n}\r\nexport default WeightInputField;\r\n","import React from 'react';\r\nimport ThumbDownOutlinedIcon from '@material-ui/icons/ThumbDownOutlined';\r\nimport { CountBtn } from '../atoms';\r\n\r\n/**\r\n * @summary BADボタン コンポーネント\r\n */\r\nconst BadBtn = () => {\r\n  return (\r\n    <CountBtn \r\n      id=\"bad_btn\"\r\n      label=\"bad\"\r\n      icon={ThumbDownOutlinedIcon}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BadBtn;","import React from 'react';\r\nimport ThumbUpOutlinedIcon from '@material-ui/icons/ThumbUpOutlined';\r\nimport { CountBtn } from '../atoms';\r\n\r\n/**\r\n * @summary GOODボタン コンポーネント\r\n */\r\nconst GoodBtn = (props) => {\r\n  return (\r\n    <CountBtn \r\n      id=\"good_btn\"\r\n      label=\"good\"\r\n      icon={ThumbUpOutlinedIcon}\r\n    />\r\n  )\r\n}\r\n\r\nexport default GoodBtn;","import './App.css';\nimport {AgeSelect, GenderRadioBtnGroup, WeightInputField, HeightInputField, GoodBtn, BadBtn} from './component/molecules';\nimport {createMuiTheme, CssBaseline, Grid, ThemeProvider } from '@material-ui/core';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      //type: 'dark',\n      type: 'light',\n    }\n  })\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div>\n        <body>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <GenderRadioBtnGroup />\n            <AgeSelect />\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <WeightInputField />\n            <HeightInputField />\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <GoodBtn />\n            <BadBtn />\n          </Grid>\n        </body>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}